# Name your project! Project names should contain only lowercase characters and underscores. 
name: 'dbt_oracle_d5'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: dbt_oracle_d5

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
target-path: "target" 
log-path: "logs"
packages-install-path: "dbt_packages"  # install using : dbt deps

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring sources
sources:  
  dbt_oracle_d5:
    +enabled: true

# Configuring models
models: 
  dbt_oracle_d5:

    03_#incremental:      # table and other objects script (DDL)
      +enabled: false

    04_repeatable:        # database procedure, function , package 
      +enabled: false

    05_repeatable_grants: # sql for granting privilege 
      +enabled: false

    99_datafix:           # init load or longops sql
      +enabled: false

    doc:                  # documentation 
      +enabled: false

    legacy:               # legacy code 
      +enabled: false
      
    staging:              # source and base model configure 
      +enabled: true
      +tags: staging
      +materialized: view

# Data Mart Configure 
    marts:
      +enabled: true
      +meta:
        favorite_color: red

      intermediate:
        +materialized: view
        +tags: intermediate
        +grants:
          select: ['LDM_SBV_ETL','LDM_FIN_ETL','LDM_FIN','LDM_SBV']

      ldm_sbv:
        +materialized: incremental 
        +tags: ldm_sbv
        +grants:
          select: ['LDM_SBV_ETL']
          all: ['LDM_SBV_ADMIN']

      ldm_sbv_out:
        +tags: ldm_sbv_out
        +materialized: view
        +grants:
          select: ['LDM_SBV_ETL']

      ldm_fin:
        +materialized: incremental 
        +tags: ldm_fin
        +grants:
          select: ['LDM_FIN_ETL']
          all: ['LDM_FIN_ADMIN']

      ldm_fin_out:
        +tags: ldm_fin_out
        +materialized: view
        +grants:
          select: ['LDM_FIN_ETL','LDM_FIN_SELECT']

# on-run-start: "{{ macro1() }}" 
on-run-end: 
  - "{{ log_dbt_results(results) }}"
  - commit

# Global Variables : The variable will be accessible in all resources
vars:   # syntax : {{ var("d_def_value_date_hist") }}
  'dbt_date:time_zone'      : 'Asia/Ho_Chi_Minh'
  v_def_code_source_system  : 'SBV'
  # v_hom_code_source_system  : 'HOM'
  v_xna                     : 'XNA'
  v_xap                     : 'XAP'
  n_minus_one               : -1
  n_one                     : 1
  n_zero                    : 0
  v_code_zero               : '0'
  v_flag_x                  : 'X'
  v_flag_y                  : 'Y'
  v_flag_n                  : 'N'
  v_code_change_type_del    : 'D'
  v_code_active             : 'a'
  v_code_due_status_y       : 'y'
  v_code_due_status_n       : 'n'
  d_def_value_date_hist     : date'1000-01-01'
  d_def_value_date_future   : date'3000-01-01'
  d_high_timestamp          : date'3000-01-01 00:00:00'
  #p_effective_date          : {{ dbt_date.n_days_ago(1, tz="Asia/Ho_Chi_Minh")) }} # for BQ ? 
  p_effective_date          : trunc(SYSDATE-1) # For Oracle   

query-comment:
  comment: "run by {{ target.user }} on {{ target.name }}  to target {{ target.schema }} " 

# dispatch: # inject package
#   - macro_namespace: dbt
#     search_order: ['dbt_oracle_d5', 'my_snapshot_helpers', 'dbt']