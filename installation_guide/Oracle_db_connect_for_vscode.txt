1/ Prepare profiles.yml for connection to specific platform (Example for Oracle connection)

dbt_oracle_d5:

   target: "{{ env_var('DBT_TARGET', 'dev_d5') }}"

   outputs:
      dev_d5:
         type: oracle
         user: "{{ env_var('DBT_ENV_SECRET_ORACLE_USER') }}"  
         pass: "{{ env_var('DBT_ENV_SECRET_ORACLE_PASSWORD_D5') }}"
         protocol: "tcp"
         host: "{{ env_var('DBT_ENV_SECRET_ORACLE_HOST_D5') }}"
         port: 1521
         service: "{{ env_var('DBT_ENV_SECRET_ORACLE_SERVICE_D5') }}"
         database: "{{ env_var('DBT_ENV_SECRET_ORACLE_DATABASE_D5') }}"
         schema: "{{ env_var('DBT_ENV_SECRET_ORACLE_SCHEMA') }}"
         retry_count: 1
         retry_delay: 3
         threads: 4

      dev_a1:
         type: oracle
         user: "{{ env_var('DBT_ENV_SECRET_ORACLE_USER') }}" 
         pass: "{{ env_var('DBT_ENV_SECRET_ORACLE_PASSWORD_A1') }}"
         protocol: "tcp"
         host: "{{ env_var('DBT_ENV_SECRET_ORACLE_HOST_A1') }}"
         port: 1521
         service: "{{ env_var('DBT_ENV_SECRET_ORACLE_SERVICE_A1') }}"
         database: "{{ env_var('DBT_ENV_SECRET_ORACLE_DATABASE_A1') }}"
         schema: "{{ env_var('DBT_ENV_SECRET_ORACLE_SCHEMA') }}"
         retry_count: 1
         retry_delay: 3
         threads: 4

2/ Set Environment variables in .vscode/setting.json 
   add this section 

      "terminal.integrated.env.[osx|windows|linux]": {
         "DBT_PROFILES_DIR": ".",
         "DBT_ENV_SECRET_ORACLE_USER": "xxx"
        ,"DBT_ENV_SECRET_ORACLE_SCHEMA":"xxx"
        ,"DBT_ENV_SECRET_ORACLE_DATABASE_D5":"xxx"
        ,"DBT_ENV_SECRET_ORACLE_PASSWORD_D5":"xxx"
        ,"DBT_ENV_SECRET_ORACLE_HOST_D5":"xxx"
        ,"DBT_ENV_SECRET_ORACLE_SERVICE_D5":"xxx"
    }

3/ Test connection using command : dbt debug 