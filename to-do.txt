-- Resource : 
    python jinja template : https://realpython.com/primer-on-jinja-templating/#get-started-with-jinja

--------------------------------------------------------------------------
---- Command helper ----
    -- echo env_var in PowerShell :    $env:ABC 

    -- Build model based-on tags :     dbt build  --model tag:sbv_dct_client

--------------------------------------------------------------------------
---- 1 So luu y trong model 

    - Comment 
        - Hidden comment 
        - Displayed comment

    - Tag 

    - Set loval variable with space-trim : {%- set v_hom_code_source_system = 'HOM' %}

--------------------------------------------------------------------------
-- sprint 6 
    - model parallel config         /
    - grantable select  (config)        /
    - truncate table (pre-hook)     /

    - upload ddl script của bảng vào 03#_incremental để chạy CI/CD sau này (tạo bảng) /  (xem xét có cần ko )

    - handle exception in macros  
        - trường hợp truncate bảng ko tồn tại --> thêm sql check bảng có tồn tại vào macro truncate --> cho model lỗi luôn  /


    - ghi log for every model  : pre_hook ; post_hook (dml / macro )
        - lần chạy tới data lớn hơn độ rộng cột ?
        - lần chạy tới thiếu 1 cột (do đổi câu query)
        - Làm sao bắt lỗi từ console ? -> ghi nhận thông qua airflow 

    - migrate dct_client
        - add source                /
        - incremental model         /
        - snapshot model        
--------------------------------------------------------------------------
-- sprint 8
        - sửa lại DCT_CLIENT 
            - sửa script -> tạo bảng, sequence  (sbv_dct_client) -> Run model -> check data  
                --> sửa suffix thêm dct_client_dbt
            - hoàn thiện doc.md cho dct_client  /
--------------------------------------------------------------------------
-- sprint 9  
    - DCT_PRODUCT  /
    - SBV FT_ACCOUNTING_ONLINE_NEW_TT

    - Logging :   /
        ghi log = lệnh insert từ post_hook 
        dùng on-run-end log_dbt_results macro
    
    - thêm macro set_oracle_session_parallel(query, dml , ddl)

--------------------------------------------------------------------------
-- dbt implementation sharing  -- sprint 9
    + tạo bảng -> viết model -> schema + document(md) -> compile model-> build model 
    + migrate code : theo tiếp cận mà dbt recommend thì cố gắng migrate từ code gốc ko điều chỉnh logic quá nhiều 
        -> các phần logic chưa hợp lý sẽ tạo vndw riêng để refactor lại (tránh implement quá nhiều task vào 1 vndw sẽ không kiểm soát đc tính đúng đắn của Model )

    - dbt installation + những plugin cần thiết để dev 
        - pluggin : dbt Power User, PowerShell, CMake 
        - dbt_profject.yml
        - profiles.yml (để 1 file trong project nhưng chỉ chứa biến, trỏ ra file bên ngoài)

    - dbt recap 
        - materialization : normal table (create table as) , incremental , snapshot (SCD-2) , view , ephemeral (CTE)
        - ref function

    - cấu trúc thư mục trong dbt project 
        - 03, 05 , 99 (tại sao phải có thư mục 03, 04, 05 -> do dbt tạo table với cấu hình very basic )
            -> do nếu chạy dbt trên nền tảng các Cloud platform thì phần tạo bảng các platform đã lo 
            -> nếu chạy với các nền tảng onprem thì phần cấu hình lưu trữ phải chuẩn bị trước, do dbt ko thể hỗ trợ tất các các option của table 
        - legacy 
        - doc -> cách viết document 
        - staging : nếu ko thực hiện transform/ cleaning data gì ở staging thì dùng source (1:1), nếu có phải tạo base-model 
        - intermediate : lưu các view/ bảng tạm 
        - model , macro , out (view - hoặc ko cần nếu export ra file)
            - model schema (quản lý metadata)

    - migrate code từ plsql -> dbt model 

    - quy trình chạy dbt 
        - dbt compile --model model_name  --> dbt test --> dbt build model 
            - các test cân nhắc -> để constraint trên table rồi thì thôi, vì nếu chạy nhiều test sẽ ảnh hưởng performance của dbt 
        - generate document / data lineage 
        
    - hướng dẫn 2 cách debug : tail log + check compile sql (target folder)

    - Logging : 
        - giới thiệu log macro -> check data 2 table log (log thành công, log thất bại sẽ nằm trên Airflow) 

--------------------------------------------------------------------------
-- Agenda 
    - Recap 
        - Install and configure 
        - model,  materialization 
        - directory structure 
    - Implementation 
        - from plsql to dbt model 
        - build 
        - debug and logging 

--------------------------------------------------------------------------
-- Macro debuging 
    - set {{ debug() }} vào dưới đoạn code muốn debug 
    - l : list variable and current step 
    - n : go to next line
    - c : go to next breakpoint ( debug point)
    - p tên_biến / pp tên_biến / hoặc tên_biến : in biến 
    - type(tên_biến)  
    - q : quit debug 


--------------------------------------------------------------------------
-- next sprint 
    - unit test 
    - integrate dbt with airflow 
    - dbt_artifacts -- logging ??? 
    - masking on View based on role ???
    - semantic layer 
    
    - chạy trên Prod schema cá nhân  ? 


--------------------------------------------------------------------------
                    WORKING AREA 
--------------------------------------------------------------------------
---- macro Logging (có thể chạy procedure logging này ngoài airflow ko ?)
- dùng pre_hook và post_hook để ghi log 
pre_hook = [ " DELETE FROM {{ source(‘myWIsource’, ‘Employees’) }} where employee_di = empDelId" ]

-- table ldm_sbv_job_log 
p_process_key 
object_name / c_mapping
object_type /
log_status  : running -> completed
sql_code
start_time
end_time
duration / function_based column 
-- trigger 
    - dtime_insert
    - inserted_by
    - dtime_update
    - updated_by

-- macros count row 
    - simple way : dùng macro nhưng chỉ count đc bảng mapping 
    - dùng audit_helper : https://docs.getdbt.com/blog/audit-helper-for-migration
        - so sánh model map và model load (2 query)

--------------------------------------------------------------------------
-- Elementary  : https://github.com/elementary-data/elementary

--------------------------------------------------------------------------
-- Tích hợp với Airflow 
https://www.astronomer.io/blog/airflow-dbt-1/
https://medium.com/hootsuite-engineering/automating-dbt-airflow-9efac348059d
--------------------------------------------------------------------------



